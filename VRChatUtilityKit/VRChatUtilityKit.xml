<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRChatUtilityKit</name>
    </assembly>
    <members>
        <member name="T:VRChatUtilityKit.Components.EnableDisableListener">
            <summary>
            A simple enable/disable listener component
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Components.EnableDisableListener.OnEnableEvent">
            <summary>
            Calls when the component is enabled.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Components.EnableDisableListener.OnDisableEvent">
            <summary>
            Calls when the component is disabled.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Ui.ButtonGroup">
            <summary>
            A class that represents an optional button header and group of buttons.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ButtonGroup.ParentMenu">
            <summary>
            The sub menu the group is in.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ButtonGroup.Header">
            <summary>
            The group's header.
            May be null.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ButtonGroup.ButtonLayoutGroup">
            <summary>
            The layout all the buttons go into.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ButtonGroup.Buttons">
            <summary>
            The buttons in the group.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ButtonGroup.#ctor(System.String,System.String,System.Collections.Generic.List{VRChatUtilityKit.Ui.IButtonGroupElement},System.Action{VRChatUtilityKit.Ui.ButtonGroup})">
            <summary>
            Creates a new button group.
            </summary>
            <param name="name">The name of the group</param>
            <param name="headerText">The text of the header</param>
            <param name="buttons">The buttons on the group</param>
            <param name="creationCallback">An action that is called with the group object when the group is created</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ButtonGroup.AddButtonHeader(System.String,System.String)">
            <summary>
            Adds a new button header to the group.
            </summary>
            <param name="text">The text on the header</param>
            <param name="gameObjectName">The name of the header GameObject</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ButtonGroup.RemoveButtonHeader">
            <summary>
            Removes the button header from the group.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ButtonGroup.AddButton(VRChatUtilityKit.Ui.IButtonGroupElement)">
            <summary>
            Adds the given button to the group.
            </summary>
            <param name="button">The button to add</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ButtonGroup.AddButtonRange(System.Collections.Generic.IEnumerable{VRChatUtilityKit.Ui.IButtonGroupElement})">
            <summary>
            Adds the given range of buttons to the group.
            </summary>
            <param name="buttons">The range of buttons to add</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ButtonGroup.RemoveButton(VRChatUtilityKit.Ui.IButtonGroupElement)">
            <summary>
            Removes the given button from the group.
            </summary>
            <param name="button">The button to remove</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ButtonGroup.ClearButtons">
            <summary>
            Removes all buttons from the group.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Ui.ButtonHeader">
            <summary>
            A wrapper holding a set of buttons' header.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ButtonHeader.TextComponent">
            <summary>
            The text mesh pro component on the button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ButtonHeader.Text">
            <summary>
            Gets or sets the text on the button.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Ui.ElementBase">
            <summary>
            A wrapper that holds a UI element.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ElementBase.Path">
            <summary>
            The path of the GameObject
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ElementBase.gameObject">
            <summary>
            The GameObject of the element.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ElementBase.rectTransform">
            <summary>
            The RectTransform of the element.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ElementBase.Id">
            <summary>
            A unique ID of the element.
            Does not persist through restarts.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ElementBase.#ctor(UnityEngine.Transform,UnityEngine.GameObject,System.String)">
            <summary>
            Creates a new ElementBase.
            </summary>
            <param name="parent">The parent of the element</param>
            <param name="template">An existing element to create a copy of</param>
            <param name="gameObjectName">The name of the element's GameObject</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ElementBase.Equals(System.Object)">
            <summary>
            Determines whether two object instances are equal.
            </summary>
            <param name="obj">The object to compare with the current object</param>
            <returns>true if the specified object is equal to the current object; otherwise, false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ElementBase.GetHashCode">
            <summary>
            Returns a unique integer representing the element.
            </summary>
            <returns>A unique integer representing the element</returns>
        </member>
        <member name="T:VRChatUtilityKit.Ui.IButtonGroupElement">
            <summary>
            An interface that represents elements that go in ButtonGroups
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IButtonGroupElement.Path">
            <summary>
            The path of the GameObject
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IButtonGroupElement.gameObject">
            <summary>
            The GameObject of the element.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IButtonGroupElement.rectTransform">
            <summary>
            The RectTransform of the element.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IButtonGroupElement.Id">
            <summary>
            A unique ID of the element.
            Does not persist through restarts.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IButtonGroupElement.Type">
            <summary>
            The type of button this interface represents.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IButtonGroupElement.TextComponent">
            <summary>
            The text mesh pro component on the element.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IButtonGroupElement.Text">
            <summary>
            Gets or sets the text on the element.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Ui.IElementWithText">
            <summary>
            An interface for wrappers that hold elements with text.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IElementWithText.TextComponent">
            <summary>
            The text mesh pro component on the element.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.IElementWithText.Text">
            <summary>
            Gets or sets the text on the element.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Ui.Label">
            <summary>
            A wrapper that holds a UI element that only has text.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.Label.Type">
            <summary>
            The type of button this interface represents.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.Label.TextComponent">
            <summary>
            The text mesh pro component on the label.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.Label.Text">
            <summary>
            Gets or sets the text on the label.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.Label.SubtitleTextComponent">
            <summary>
            The subtitle text mesh pro component on the label.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.Label.SubtitleText">
            <summary>
            Gets or sets the subtitle text on the label.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.Label.#ctor(System.String,System.String,System.String,System.Action{VRChatUtilityKit.Ui.Label})">
            <summary>
            Creates a new label.
            </summary>
            <param name="text">The text of the label</param>
            <param name="subtitleText">The subtitle text of the label</param>
            <param name="gameObjectName">The name of the label's GameObject</param>
            <param name="creationCallback">An action that is called with the label object when the label is created</param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.SingleButton">
            <summary>
            A wrapper holding a button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SingleButton.Type">
            <summary>
            The type of button this interface represents.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SingleButton.OnClick">
            <summary>
            The OnClick of the button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SingleButton.JumpBadge">
            <summary>
            A small icon indicating this buttons jumps to the big menu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SingleButton.#ctor(System.Action,UnityEngine.Sprite,System.String,System.String,System.String,System.Action{VRChatUtilityKit.Ui.SingleButton})">
            <summary>
            Creates a new button.
            </summary>
            <param name="onClick">The OnClick of the button</param>
            <param name="icon">The icon for the button</param>
            <param name="text">The text of the button</param>
            <param name="gameObjectName">The name of the button's GameObject</param>
            <param name="tooltipText">The tooltip of the button</param>
            <param name="creationCallback">An action that is called with the button object when the button is created</param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.SubMenu">
            <summary>
            A wrapper holding a sub menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SubMenu.uiPage">
            <summary>
            The UIPage attached to the sub menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SubMenu.PageLayoutGroup">
            <summary>
            The VerticalLayoutGroup that holds all the buttons and elements of the sub menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SubMenu.BackButton">
            <summary>
            The back button of the sub menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SubMenu.TextComponent">
            <summary>
            The Text component of the title of the sub menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SubMenu.Text">
            <summary>
            Gets or sets the title of the sub menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.SubMenu.ButtonGroups">
            <summary>
            The list of button groups on this menu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SubMenu.#ctor(UnityEngine.Transform,System.String,System.String,System.String,System.Action{VRChatUtilityKit.Ui.SubMenu})">
            <summary>
            Creates a new sub menu.
            </summary>
            <param name="parent">The parent of the sub menu</param>
            <param name="pageName">The name of the sub menu's page</param>
            <param name="gameObjectName">The name of the sub menu's GameObject</param>
            <param name="headerText">The text of the sub menu's header</param>
            <param name="creationCallback">An action that is called with the submenu object when the submenu is created</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SubMenu.#ctor(System.String,System.String,System.String,System.Action{VRChatUtilityKit.Ui.SubMenu})">
            <summary>
            Creates a new sub menu.
            </summary>
            <param name="pageName">The name of the sub menu's page</param>
            <param name="gameObjectName">The name of the sub menu's GameObject</param>
            <param name="headerText">The text of the sub menu's header</param>
            <param name="creationCallback">An action that is called with the submenu object when the submenu is created</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SubMenu.AddButtonGroup(VRChatUtilityKit.Ui.ButtonGroup)">
            <summary>
            Adds the given button group to the sub menu.
            </summary>
            <param name="buttonGroup">The button group to add</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SubMenu.AddButtonGroupRange(System.Collections.Generic.IEnumerable{VRChatUtilityKit.Ui.ButtonGroup})">
            <summary>
            Adds the given range of button groups to the sub menu.
            </summary>
            <param name="buttonGroups">The range of button groups to add</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SubMenu.RemoveButtonGroup(VRChatUtilityKit.Ui.ButtonGroup)">
            <summary>
            Removes the given button group from the sub menu.
            </summary>
            <param name="buttonGroup">The button group to remove</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SubMenu.ClearButtonGroups">
            <summary>
            Removes all button groups from the submenu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.SubMenu.ToggleScrollbar(System.Boolean)">
            <summary>
            Toggles the 
            </summary>
            <param name="active"></param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.TabButton">
            <summary>
            A wrapper that holds a tab button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.TabButton.SubMenu">
            <summary>
            The tab menu attached to the tab button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.TabButton.MenuTab">
            <summary>
            The MenuTab component on the tab button.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabButton.#ctor(UnityEngine.Sprite,System.String,System.String,System.String,System.String,System.Action{VRChatUtilityKit.Ui.TabButton})">
            <summary>
            Creates a new tab button.
            </summary>
            <param name="sprite">The sprite of the tab button</param>
            <param name="pageName">The name of the tab menu's page</param>
            <param name="gameObjectName">The name of the tab button's GameObject</param>
            <param name="tooltipText">The tooltip of the tab button</param>
            <param name="headerText">The text of the sub menu's header</param>
            <param name="creationCallback">An action that is called with the tabbutton object when the tabbutton is created</param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.TabMenu">
            <summary>
            A wrapper that holds a tab menu 
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.OpenSubMenu(VRC.UI.Elements.UIPage)">
            <summary>
            Opens a the specified menu as a sub menu of the tab menu.
            </summary>
            <param name="uiPage">The page to open</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.OpenSubMenu(VRChatUtilityKit.Ui.SubMenu)">
            <summary>
            Opens a the specified menu as a sub menu of the tab menu.
            </summary>
            <param name="subMenu">The menu to open</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.CloseAllSubMenus">
            <summary>
            Closes all sub menus of the tab menu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.PopSubMenu">
            <summary>
            Closes the most recently open sub menu of the tab menu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.CurrentPage">
            <summary>
            Returns the most recently open menu of the tab menu.
            </summary>
            <returns>The most recently open menu of the tab menu</returns>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.RemovePageFromStack(VRC.UI.Elements.UIPage)">
            <summary>
            Removes the given sub menu from the tab menu's stack.
            </summary>
            <param name="uiPage">The page to remove</param>
            <returns>The page that was removed</returns>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.RemovePageFromStack(VRChatUtilityKit.Ui.SubMenu)">
            <summary>
            Removes the given sub menu from the tab menu's stack.
            </summary>
            <param name="subMenu">The menu to remove</param>
            <returns>The page that was removed</returns>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.GoBackToMenu(VRC.UI.Elements.UIPage)">
            <summary>
            Goes to the given page in the tab menu's stack.
            Closes any other pages above it in the stack.
            The given page must already be in the stack.
            </summary>
            <param name="uiPage">The page to open</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.TabMenu.GoBackToMenu(VRChatUtilityKit.Ui.SubMenu)">
            <summary>
            Goes to the given page in the tab menu's stack.
            Closes any other pages above it in the stack.
            The given page must already be in the stack.
            </summary>
            <param name="subMenu">The menu to open</param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.ToggleButton">
            <summary>
            A class representing a toggle button in VRChat's UI.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ToggleButton.Type">
            <summary>
            The type of button this interface represents.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ToggleButton.ToggleComponent">
            <summary>
            The toggle on the component on the button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ToggleButton.OnClick">
            <summary>
            The OnClick of the button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.ToggleButton.AltSprite">
            <summary>
            The off sprite of the button.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.ToggleButton.#ctor(System.Action{System.Boolean},UnityEngine.Sprite,UnityEngine.Sprite,System.String,System.String,System.String,System.String,System.Action{VRChatUtilityKit.Ui.ToggleButton})">
            <summary>
            Creates a new toggle button.
            </summary>
            <param name="onClick">The OnClick of the button</param>
            <param name="icon">The icon for the button</param>
            <param name="altIcon">The off icon for the button</param>
            <param name="text">The text of the button</param>
            <param name="gameObjectName">The name of the button's GameObject</param>
            <param name="tooltipText">The tooltip shown when the toggle is on</param>
            <param name="tooltipAltText">The tooltip shown when the toggle is off</param>
            <param name="creationCallback">An action that is called with the button object when the button is created</param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.UiManager">
            <summary>
            A UiManager that contains many utilites pertaining to VRChat's UI.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Ui.UiManager.OnBigMenuOpened">
            <summary>
            Called when the big menu is opened.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Ui.UiManager.OnBigMenuClosed">
            <summary>
            Called when the big menu is closed.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.UiManager.BigMenuIndexEnum">
            <summary>
            The type of the enum that is used for the big menu index.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.UiManager.BigMenuIndexToPathTable">
            <summary>
            A table that will convert the big menu index to the path of the page.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Ui.UiManager.OnUserInfoMenuOpened">
            <summary>
            Called when the user info menu is opened.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Ui.UiManager.OnUserInfoMenuClosed">
            <summary>
            Called when the user info menu is closed.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Ui.UiManager.OnQuickMenuOpened">
            <summary>
            Called when the QuickMenu is opened.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Ui.UiManager.OnQuickMenuClosed">
            <summary>
            Called when the QuickMenu is closed.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Ui.UiManager.OnUIPageToggled">
            <summary>
            Called when a UIPage is shown in the QuickMenu.
            The bool in the event is whether the page was shown or hidden.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.UiManager.QuickMenuIndexEnum">
            <summary>
            The type of the enum that is used for the QuickMenu index.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.UiManager.QMStateController">
            <summary>
            The QuickMenu MenuStateController used by VRChat
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.MainMenu(System.Int32)">
            <summary>
            Sets the index of the big menu.
            </summary>
            <param name="index">The index to set it to</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.MainMenu(System.Int32,System.Boolean)">
            <summary>
            Sets the index of the big menu.
            </summary>
            <param name="index">The index to set it to</param>
            <param name="openUi">Whether to open the Ui along with setting the index</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.MainMenu(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Sets the index of the big menu.
            </summary>
            <param name="index">The index to set it to</param>
            <param name="openUi">Whether to open the Ui along with setting the index</param>
            <param name="addToScreenStack">Whether the new screen opened should be added to the screen stack</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.MainMenu(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets the index of the big menu.
            </summary>
            <param name="index">The index to set it to</param>
            <param name="openUi">Whether to open the Ui along with setting the index</param>
            <param name="addToScreenStack">Whether the new screen opened should be added to the screen stack</param>
            <param name="rePlaceUi">Whether to recalculate and reposition the UI</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenUserInUserInfoPage(VRC.DataModel.IUser)">
            <summary>
            Opens the given user in the user info page. 
            </summary>
            <param name="user">The user to open</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.CloseBigMenu">
            <summary>
            Closes the big menu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenBigMenu">
            <summary>
            Opens the big menu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenBigMenu(System.Boolean)">
            <summary>
            Opens the big menu
            </summary>
            <param name="showDefaultScreen">Whether to show the world menu after opening the big menu</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenUserInQuickMenu(VRC.Core.APIUser)">
            <summary>
            Opens given user in the QuickMenu.
            </summary>
            <param name="playerToSelect">The player to select</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenQuickMenu">
            <summary>
            Opens the QuickMenu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenQuickMenuPage(System.String)">
            <summary>
            Opens the specified QuickMenu page.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.CloseQuickMenu">
            <summary>
            Closes the QuickMenu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.CloseMenu">
            <summary>
            Closes all open menus.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.ClosePopup">
            <summary>
            Closes the current open popup
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenSmallPopup(System.String,System.String,System.String,System.Action,System.Action{VRCUiPopup})">
            <summary>
            Opens a small popup v2.
            </summary>
            <param name="title">The title of the popup</param>
            <param name="description">The description of the popup</param>
            <param name="buttonText">The text of the center button</param>
            <param name="onButtonClick">The onClick of the center button</param>
            <param name="additionalSetup">A callback called when the popup is initialized</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenErrorPopup(System.String)">
            <summary>
            Opens a small popup v2 with the title "Error!".
            </summary>
            <param name="description">The description of the popup</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenAlertPopup(System.String)">
            <summary>
            Opens a small popup v2 with the title "Alert!".
            </summary>
            <param name="description">The description of the popup</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenPopup(System.String,System.String,System.String,System.Action,System.String,System.Action,System.Action{VRCUiPopup})">
            <summary>
            Opens a small popup v2.
            </summary>
            <param name="title">The title of the popup</param>
            <param name="description">The description of the popup</param>
            <param name="leftButtonText">The text of the left button</param>
            <param name="leftButtonClick">The onClick of the left button</param>
            <param name="rightButtonText">The text of the right button</param>
            <param name="rightButtonClick">The onClick of the right button</param>
            <param name="additionalSetup">A callback called when the popup is initialized</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.OpenSubMenu(VRC.UI.Elements.UIPage,VRC.UI.Elements.UIPage)">
            <summary>
            Opens a the specified menu as a sub menu of the given root page.
            </summary>
            <param name="rootPage">The page to open the submenu on</param>
            <param name="uiPage">The page to open</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.CloseAllSubMenus(VRC.UI.Elements.UIPage)">
            <summary>
            Closes all sub menus of the given root page.
            </summary>
            <param name="rootPage">The page to close all submenus of</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.PopSubMenu(VRC.UI.Elements.UIPage)">
            <summary>
            Closes the most recently open sub menu of the given root page.
            </summary>
            <param name="rootPage">The page to pop a submenu from</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.CurrentPage(VRC.UI.Elements.UIPage)">
            <summary>
            Returns the most recently open menu of the given root page.
            </summary>
            <param name="rootPage">The page to grab the current page of</param>
            <returns>The most recently open menu of the tab menu</returns>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.RemovePageFromStack(VRC.UI.Elements.UIPage,VRC.UI.Elements.UIPage)">
            <summary>
            Removes the given sub menu from the given root page's stack.
            </summary>
            <param name="rootPage">The root page to remove a page from</param>
            <param name="uiPage">The page to remove</param>
            <returns>The page that was removed</returns>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.GoBackToMenu(VRC.UI.Elements.UIPage,VRC.UI.Elements.UIPage)">
            <summary>
            Goes to the given page in the root page's stack.
            Closes any other pages above it in the stack.
            The given page must already be in the stack.
            </summary>
            <param name="rootPage">The root page to go back to a menu on</param>
            <param name="uiPage">The page to open</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.AddButtonToExistingGroup(UnityEngine.GameObject,VRChatUtilityKit.Ui.SingleButton)">
            <summary>
            Adds a button to an existing group of buttons.
            </summary>
            <param name="groupGameObject">The GameObject of the button group. VRChat ones generally end with the prefix "Buttons_".</param>
            <param name="button">The button to add to the group</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.AddButtonGroupToExistingMenu(UnityEngine.GameObject,VRChatUtilityKit.Ui.ButtonGroup)">
            <summary>
            Adds a button group to an existing menu.
            </summary>
            <param name="menuGameObject">The GameObject of the existing menu. This should have a VerticalLayoutGroup attached.</param>
            <param name="buttonGroup">The button to add to the group</param>
        </member>
        <member name="M:VRChatUtilityKit.Ui.UiManager.ToggleScrollRectOnExistingMenu(UnityEngine.GameObject,System.Boolean)">
            <summary>
            Toggles the scrollbar on the given menu.
            </summary>
            <param name="menuGameObject">The menu to toggle the scrollbar on</param>
            <param name="active">Whether to enable or disable the scrollbar</param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.VRCButton">
            <summary>
            A wrapper that holds a generic button used in VRChat's menus.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.VRCButton.TextComponent">
            <summary>
            The text mesh pro component on the button.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.VRCButton.Text">
            <summary>
            Gets or sets the text on the button.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.VRCButton.#ctor(UnityEngine.GameObject,UnityEngine.Sprite,System.String,System.String,System.String)">
            <summary>
            Creates a new VRCButton.
            </summary>
            <param name="template">The template of the button you want to make</param>
            <param name="icon">The icon of the button</param>
            <param name="text">The text on the button</param>
            <param name="gameObjectName">The name of the button's GameObject</param>
            <param name="tooltipText">The tooltip of the button</param>
        </member>
        <member name="T:VRChatUtilityKit.Ui.VRCSelectable">
            <summary>
            A fairly low level wrapper representing something you can select.
            You should not be interacting directly with it.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.VRCSelectable.ButtonComponent">
            <summary>
            The button component on the selectable.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.VRCSelectable.Tooltip">
            <summary>
            The tooltip on the selectable.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.VRCSelectable.TooltipText">
            <summary>
            Gets or sets the selectable's tooltip's text.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.VRCSelectable.TooltipAltText">
            <summary>
            Gets or sets the selectable's tooltip's alternate text.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Ui.VRCSelectable.sprite">
            <summary>
            The sprite of the selectable.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Ui.VRCSelectable.#ctor(UnityEngine.Transform,UnityEngine.GameObject,UnityEngine.Sprite,System.String,System.String)">
            <summary>
            Creates a new VRCSelectable.
            </summary>
            <param name="parent">The parent of the selectable</param>
            <param name="template">An existing selectable to instantiate a copy of</param>
            <param name="icon">The icon of the selectable</param>
            <param name="gameObjectName">The name of the selectable's GameObject</param>
            <param name="tooltipText">The tooltip of the selectable</param>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.AsyncUtils">
            <summary>
            A set of async utilities.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.AsyncUtils.YieldToMainThread">
            <summary>
            Await this to force the rest of the method body to run on the main thread.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.Converters">
            <summary>
            A set of converters for positions.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Converters.ConvertToUnityUnits(UnityEngine.Vector3)">
            <summary>
            Returns the given coordinate converted from emm units to Unity units.
            </summary>
            <param name="emmPosition">The position to conver to Unity units</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Converters.ConvertToEmmUnits(UnityEngine.Vector3)">
            <summary>
            Returns the given coordinate converted from Unity units to emm units.
            </summary>
            <param name="unityPosition">The position to conver to emm units</param>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.CursorUtils">
            <summary>
            A set of utilities pertaining to VRChat's cursor
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.CursorUtils.CurrentCursor">
            <summary>
            Returns the current cursor being used by VRChat.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.CursorUtils.IsUseInputPressed">
            <summary>
            Returns whether the use input is being pressed on the current cursor.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.CursorUtils.HitPosition">
            <summary>
            Returns where the raycast of the current cursor is colliding.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.DataUtils">
            <summary>
            A set of utilities for data.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.DataUtils.CalculateSHA256Hash(System.Byte[])">
            <summary>
            Returns the SHA256 hash of the given byte array.
            </summary>
            <param name="data">The byte array to get the hash of</param>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.Extensions">
            <summary>
            A set of extensions for various things.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.GetPath(UnityEngine.GameObject)">
            <summary>
            Returns the path of the given GameObject.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.SetLayerRecursive(UnityEngine.GameObject,System.Int32)">
            <summary>
            Sets the layer of the given GameObject and its children to the one given
            </summary>
            <param name="layer">The layer to set the GameObject and children to</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.SetZ(UnityEngine.Vector3,System.Single)">
            <summary>
            Returns a new Vector3 with its z position set to the given one.
            </summary>
            <param name="newZ">The new z position of the vector</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.RoundAmount(System.Single,System.Single)">
            <summary>
            Returns a copy of the float rounded to the given number.
            </summary>
            <param name="nearestFactor">The number the float should be rounded to</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.RoundAmount(UnityEngine.Vector3,System.Single)">
            <summary>
            Returns a copy of the vector rounded to the given number.
            </summary>
            <param name="nearestFactor">The number the vector should be rounded to</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.RoundAmount(UnityEngine.Vector2,System.Single)">
            <summary>
            Returns a copy of the vector rounded to the given number.
            </summary>
            <param name="nearestFactor">The number the vector should be rounded to</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.DelegateSafeInvoke(System.Delegate,System.Object[])">
            <summary>
            Safely invokes the given delegate with the given args.
            </summary>
            <param name="delegate">The given delegate</param>
            <param name="args">The params of the delegate</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.ToIUser(VRC.Core.APIUser)">
            <summary>
            Converts the given APIUser to an IUser.
            Try not to use this too often; make sure to cache your IUser object. The operation is fairly slow. 
            </summary>
            <param name="value">The APIUser to convert to IUser</param>
            <returns></returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.Extensions.ToAPIUser(VRC.DataModel.IUser)">
            <summary>
            Converts the given IUser to an APIUser.
            Thanks knah for providing this.
            </summary>
            <param name="value">The IUser to convert to APIUser</param>
            <returns></returns>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.KeybindAttribute">
            <summary>
            An attribute that calls the method it is put on when the given key is pressed.
            Meant primarily for debugging purposes, but can be utilised for easy keybind creation.
            Can only be applied to static methods without parameters.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.KeybindAttribute.KeyCode">
            <summary>
            The key to press to call the attached method.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.KeybindAttribute.#ctor(UnityEngine.KeyCode)">
            <summary>
            Creates a new keybind. 
            The method the attribute is put on will be called when the given key is pressed.
            Meant primarily for debugging purposes, but can be utilised for easy keybind creation.
            Can only be applied to static methods without parameters.
            </summary>
            <param name="keyCode">The key to press to call the attached method</param>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.MelonLoaderEvents">
            <summary>
            A class that, when inherited, has methods that call at the same time as the MelonMod methods.
            Primarily to make OnApplicationStart, UIInit, etc. easier to subscribe to.
            Overrides for any Update methods are unavailable for performance reasons.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.MelonLoaderEventsAttribute">
            <summary>
            An attribute that effectively acts the same way as MelonLoaderEvents, except as an attribute and not inherited class.
            Mainly meant so static classes don't need to be instance.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.MelonLoaderEventsPriorityAttribute">
            <summary>
            An attribute to dictate the priority of the MelonLoaderEvents attribute/class.
            Lower is higher priority.
            </summary>
        </member>
        <member name="F:VRChatUtilityKit.Utilities.MelonLoaderEventsPriorityAttribute.priority">
            <summary>
            The priority.
            Lower is higher priority.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.MelonLoaderEventsPriorityAttribute.#ctor(System.Int32)">
            <summary>
            Creates a new MelonLoaderEventsPrority Attribute.
            </summary>
            <param name="priority">The priority of the attribute</param>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.NetworkEvents">
            <summary>
            A set of events pertaining to VRChat's network.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnPlayerLeft">
            <summary>
            Calls when a player has left the instance.
            This will also call as every player is removed after leaving an instance.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnPlayerJoined">
            <summary>
            Calls when a player joins the instance.
            The first call of this may contain a null APIUser.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnRoomLeft">
            <summary>
            Calls when the local user leaves an room.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnRoomJoined">
            <summary>
            Calls when the local user joins an room.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnFriended">
            <summary>
            Calls when a new friend is added.
            Whether they accepted your friend request or you accepted theirs does not matter.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnUnfriended">
            <summary>
            Calls when a friend is removed.
            Whether you removed them or they removed you does not matter.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnInstanceChanged">
            <summary>
            Calls during the loading screen into a new instance.
            Does not call if there was a desync while joining the instance.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnMasterChanged">
            <summary>
            Calls when the master of the instance changes.
            Does not call upon initialy receiving the master after joining the instance.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnAvatarChanged">
            <summary>
            Calls when the internal value of the avatar in an instance of VRCAvatarManager is changed.
            It will call for every GameObject change. This is not limited to, but includes the error bot and platform substitute.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnAvatarInstantiated">
            <summary>
            Calls when an avatar is instantiated
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnAvatarDownloadProgressed">
            <summary>
            Calls when an avatar download is progressing. 
            The float is percentage and long is total size.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnSetupFlagsReceived">
            <summary>
            Calls when the setup flags of a VRCPlayer is received from photon.
            The int is actually the enum "VRCPlayer.EnumNPrivateSealedvaViMoVRStShAvUsFa9vUnique" at the time of writing.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnShowSocialRankChanged">
            <summary>
            Calls when the local user changes whether to show their social rank.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnPlayerModerationSent">
            <summary>
            Calls when a player moderation is sent from the local user.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.NetworkEvents.OnPlayerModerationRemoved">
            <summary>
            Calls when a player moderation is removed by the local user.
            </summary>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.VRCUtils">
            <summary>
            A set of utilities pertaining to VRChat itself.
            </summary>
        </member>
        <member name="E:VRChatUtilityKit.Utilities.VRCUtils.OnUiManagerInit">
            <summary>
            Calls when the VRChat UiManager is initialized
            </summary>
        </member>
        <member name="F:VRChatUtilityKit.Utilities.VRCUtils.OnEmmWorldCheckCompleted">
            <summary>
            Calls when the emm world check finishes.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.AreRiskyFunctionsAllowed">
            <summary>
            Returns whether risky functions are allowed in the current world. 
            It is recommended to use OnEmmWorldCheck over this property.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.IsUIXPresent">
            <summary>
            Returns whether UIExpansionKit is loaded.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.WorldInfoInstance">
            <summary>
            Returns the instance of the WorldInfo component.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.UserInfoInstance">
            <summary>
            Returns the instance of the UserInfo component.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.MenuControllerInstance">
            <summary>
             Returns the instance of the MenuController.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.ActiveUserInUserInfoMenu">
            <summary>
            Returns the active user in the user info menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.ActivePlayerInUserInfoMenu">
            <summary>
            Returns the active player in the user info menu.
            Will be null if the player isn't in the instance.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.SelectedUser">
            <summary>
            Returns the user selected via the cursor.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.SelectedPlayer">
            <summary>
            Returns the player selected via the cursor.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.ActiveUserInUserSelectMenu">
            <summary>
            Returns the active user in the user select menu.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.VRCUtils.ActivePlayerInUserSelectMenu">
            <summary>
            Returns the active player in the user select menu.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.VRCUtils.IsAvatarExplcitlyShown(VRC.Core.APIUser)">
            <summary>
            Returns whether the given user's avatar is explicity shown.
            </summary>
            <param name="user">The user to check</param>
            <returns></returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.VRCUtils.IsAvatarExplcitlyHidden(VRC.Core.APIUser)">
            <summary>
            Returns whether the given user's avatar is explicity hidden.
            </summary>
            <param name="user">The user to check</param>
            <returns></returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.VRCUtils.ReloadAllAvatars">
            <summary>
            Reloads all avatars.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.VRCUtils.ReloadAllAvatars(System.Boolean)">
            <summary>
            Reloads all avatars.
            </summary>
            <param name="excludeSelf">Whether or not to exclude the local player from the reload.</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.VRCUtils.ReloadAvatar(VRCPlayer)">
            <summary>
            Reloads the given player's avatar.
            </summary>
            <param name="player">The given player</param>
        </member>
        <member name="T:VRChatUtilityKit.Utilities.XrefUtils">
            <summary>
            A set of utilites for Xref scanning.
            </summary>
        </member>
        <member name="P:VRChatUtilityKit.Utilities.XrefUtils.PrintMethod">
            <summary>
            A method that prints the name of the original method when used in a patch.
            Useful when figuring out Xrefs.
            </summary>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckStrings(System.Reflection.MethodInfo,System.Func{System.String,System.Boolean})">
            <summary>
            Checks the strings in the given method's body.
            </summary>
            <param name="method">The method to check</param>
            <param name="predicate">The predicate to check the strings against</param>
            <returns>true if the predicate returned true any times, otherwise false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckStrings(System.Reflection.MethodInfo,System.String)">
            <summary>
            Returns if a string is contained within the given method's body.
            </summary>
            <param name="method">The method to check</param>
            <param name="match">The string to check</param>
            <returns>true if the given string literal is contained within the given method, otherwise false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckMethod(System.Reflection.MethodInfo,System.String)">
            <summary>
            Returns if a string is contained within the given method's body.
            </summary>
            <param name="method">The method to check</param>
            <param name="match">The string to check</param>
            <returns>true if the given string literal is contained within the given method, otherwise false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckUsedBy(System.Reflection.MethodBase,System.Func{System.Reflection.MethodBase,System.Boolean})">
            <summary>
            Checks the methods the given method is used by.
            Note: the methods passed into the predicate may be false.
            </summary>
            <param name="method">The method to check</param>
            <param name="predicate">The predicate to check the methods against</param>
            <returns>true if the predicate returned true any times, otherwise false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckUsedBy(System.Reflection.MethodBase,System.String,System.Type)">
            <summary>
            Returns if the given method is called by the other given method.
            </summary>
            <param name="method">The method to check</param>
            <param name="methodName">The name of the method that uses the given method</param>
            <param name="type">The type of the method that uses the given method</param>
            <returns>true if any of the given method is called by a method with the given name of the given type, otherwise false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckUsing(System.Reflection.MethodBase,System.Func{System.Reflection.MethodBase,System.Boolean})">
            <summary>
            Checks the methods the given method uses.
            Note: the methods passed into the predicate may be false.
            </summary>
            <param name="method">The method to check</param>
            <param name="predicate">The predicate to check the methods against</param>
            <returns>true if the predicate returned true any times, otherwise false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckUsing(System.Reflection.MethodBase,System.String,System.Type)">
            <summary>
            Returns whether the given method is using another the other given method.
            </summary>
            <param name="method">The method to check</param>
            <param name="methodName">The name of the method that is used by the given method</param>
            <param name="type">The type of the method that is used by the given method</param>
            <returns>true if any of the given method calls a method with the given name of the given type, otherwise false</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckUsedByCount(System.Reflection.MethodBase,System.Func{System.Reflection.MethodBase,System.Boolean})">
            <summary>
            Counts how many times the given method is used by.
            Note: the methods passed into the predicate may be false.
            </summary>
            <param name="method">The method to check</param>
            <param name="predicate">The predicate to check the methods against</param>
            <returns>the number of times the given method is called by a method with the given name of the given type</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.CheckUsedByCount(System.Reflection.MethodBase,System.String,System.Type)">
            <summary>
            Returns the number of times the given method is called by the other given method.
            </summary>
            <param name="method">The method to check</param>
            <param name="methodName">The name of the method that uses the given method</param>
            <param name="type">The type of the method that uses the given method</param>
            <returns>the number of times the given method is called by a method with the given name of the given type</returns>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.DumpXrefInfo(System.Reflection.MethodBase)">
            <summary>
            Dumps the Xref information on a method.
            This is for DEBUG PURPOSES ONLY.
            </summary>
            <param name="method">The method to dump information on</param>
        </member>
        <member name="M:VRChatUtilityKit.Utilities.XrefUtils.GetTypeFromObfuscatedName(System.String)">
            <summary>
            DO NOT call this often. 
            It is slow.
            </summary>
            <param name="obfuscatedName">The obfuscated name of the type</param>
            <returns>The Unhollower processed name</returns>
        </member>
    </members>
</doc>
